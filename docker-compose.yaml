version: '3.9'

services:
  app:
    build: .
    container_name: genai_banking_app
    command: uvicorn main:app --host 0.0.0.0 --port 8080 --reload
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - redis
    networks:
      - monitor-net

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.2.2
    container_name: mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5001
    ports:
      - "5001:5001"
    command: mlflow server --host 0.0.0.0 --port 5001 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/artifacts
    volumes:
      - ./mlruns:/mlflow/artifacts
    networks:
      - monitor-net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana:/var/lib/grafana
    networks:
      - monitor-net

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - monitor-net

  optuna:
    image: ghcr.io/optuna/optuna-dashboard
    container_name: optuna
    ports:
      - "8081:8080"
    command:
      - optuna-dashboard
      - --host
      - 0.0.0.0
      - sqlite:///optuna.db
    volumes:
      - ./optuna:/optuna
    networks:
      - monitor-net

networks:
  monitor-net:
